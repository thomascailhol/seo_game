let sp,queries;const gameOverGif="https://giphy.com/embed/eJ4j2VnYOZU8qJU3Py",winGif="https://giphy.com/embed/26tOZ42Mg6pbTUPHW";document.addEventListener("DOMContentLoaded",(e=>{sp=supabase.createClient("https://fyggsmdxumjqcmqkdizz.supabase.co","eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ5Z2dzbWR4dW1qcWNtcWtkaXp6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDEzMzU3NTYsImV4cCI6MjAxNjkxMTc1Nn0.c_-UlBxlaFZZcj9FKr8u33r2TE7KZSt_-MzijCPlB94");const t=document.getElementById("start-game"),s=document.getElementById("rules-button");t.addEventListener("click",(function(){toggleMenu(),togglePlayerInput()})),s.addEventListener("click",(function(){toggleRules()}));document.getElementById("new-player-form").addEventListener("submit",(function(e){e.preventDefault(),submitPlayerName()}));document.getElementById("rules-wrapper").addEventListener("click",(function(){toggleRules()})),collectQueries(),collectPlayers()}));class GameSession{constructor(e,t,s,n,i){this.query=e,this.cards=i,this.numberOfResults=e.ranking.results.length,this.score=0,this.position=21,this.usedCards=[],this.gameOver=!1,this.playerName=s,this.queryIndex=t,this.context=n}chooseCard(e){const t=this.cards[e];this.usedCards.push(t.uuid),-666===t.impact?(this.position=Math.max(1,Math.min(this.numberOfResults,this.position-t.impact)),this.endGame("game_over")):(this.position=Math.max(1,Math.min(this.numberOfResults,this.position-t.impact)),console.log("Position:",this.position),1===this.position&&this.usedCards.length<6?this.endGame("nailed_it"):1===this.position&&6===this.usedCards.length?this.endGame("first_place"):6===this.usedCards.length&&this.position>10?this.endGame("lost"):6===this.usedCards.length&&this.position<=3?this.endGame("top_3"):6===this.usedCards.length&&this.position>3&&this.endGame("top_10"))}endGame(e){this.gameOver=!0,disableAllCards(),this.computeFinalScore(),"nailed_it"===e?this.displayEndGame("won",`Incroyable ! Tu as terminé le SEO Game en première position en utilisant seulement ${this.usedCards.length} ${1===this.usedCards.length?"carte":"cartes"} ! Tu obtiens ${this.score} points !`):"first_place"===e?this.displayEndGame("won","Bravo ! Tu as terminé le SEO Game en première position ! Tu obtiens "+this.score+" points !"):"top_3"===e?this.displayEndGame("won","Bravo ! Tu as terminé le SEO Game dans le top 3 à la position "+this.position+" ! Tu obtiens "+this.score+" points !"):"top_10"===e?this.displayEndGame("won","Pas mal ! Tu as terminé le SEO Game dans le top 10 à la position "+this.position+" ! Tu obtiens "+this.score+" points !"):"game_over"===e?this.displayEndGame("lost","Ouch ! Tu as terminé au fin fond des SERPs "+this.playerName+" à la position "+this.position+" ! C'est la cata... Fonce voir un membre de l'équipe hyffen pour te remonter le moral et te donner quelques conseils. (Tu obtiens bien évidemment "+this.score+" point !)"):"lost"===e&&this.displayEndGame("lost","Tu peux mieux faire ! Tu as terminé le SEO Game à la position "+this.position+" ! Tu obtiens "+this.score+" points !"),submitGameSessionToSupabase(this.playerName,this.query.id,this.usedCards)}computeFinalScore(){1===this.position&&this.usedCards.length<6?this.score=queries[this.queryIndex].ranking.results.length*(6-this.usedCards.length):1===this.position?this.score=queries[this.queryIndex].ranking.results.length:this.position===queries[this.queryIndex].ranking.results.length||this.usedCards.some((e=>-666===e.impact))?this.score=0:this.score=queries[this.queryIndex].ranking.results.length-this.position}displayEndGame(e,t){document.getElementById("end-game").classList.remove("hidden");document.getElementById("end-game-message").textContent=t;const s=document.getElementById("end-game-gif");"won"===e?s.src=winGif:"lost"===e&&(s.src=gameOverGif)}}async function fetchQueries(){const e=sp.from("Query_v2");try{return(await e.select("*")).data}catch(e){throw console.error("Error retrieving queries from Supabase:",e),e}}async function collectQueries(){try{queries=await fetchQueries()}catch(e){console.error("Error collecting queries:",e)}}async function fetchPlayers(){try{const{data:e,error:t}=await sp.rpc("get_players");if(t)throw t;return e}catch(e){throw console.error("Error retrieving players from Supabase:",e),e}}async function collectPlayers(){try{players=await fetchPlayers(),insertPlayersNames(players)}catch(e){console.error("Error collecting players:",e)}}let currentSession;function displayQueries(e){document.getElementById("queries-wrapper").classList.remove("hidden");const t=document.getElementById("queries-container");t.innerHTML="",queries.forEach(((s,n)=>{const i=document.createElement("a");i.className="query",i.textContent=s.name,i.addEventListener("click",(function(){startNewSession(n,e)})),t.appendChild(i)}))}function insertPlayersNames(e){const t=document.getElementById("players-names");t.innerHTML="",e.forEach((e=>{const s=document.createElement("p");s.classList.add("player-name"),s.textContent=e.name,t.appendChild(s),s.addEventListener("click",(function(){submitPlayerName(e.name)}))}))}function toggleMenu(){document.getElementById("menu").classList.toggle("hidden");document.getElementById("game-grid").classList.toggle("hidden")}function togglePlayerInput(){document.getElementById("player-wrapper").classList.toggle("hidden")}function submitPlayerName(e){if(e)displayQueries(e),togglePlayerInput();else{displayQueries(document.getElementById("player-name").value),togglePlayerInput()}}function toggleRules(){document.getElementById("menu").classList.toggle("hidden");document.getElementById("rules-wrapper").classList.toggle("hidden")}async function startNewSession(e,t){const s=queries[e],n=await collectCards(queries[e].id);currentSession=new GameSession(s,e,t,s.context,n),hideQueries(),displayContext(s.context),currentSession.score=0,updateRankingDisplay()}function displayContext(e){const t=document.getElementById("game-cards-container"),s=document.createElement("div");s.classList.add("context"),s.textContent=e,t.insertAdjacentElement("afterbegin",s)}function updateUsedCardsCount(){document.getElementById("used-cards-count").textContent=currentSession.usedCards.length}function onCardChoice(e,t){const s=currentSession.cards[e].impact;currentSession.chooseCard(e),t.querySelector(".game-card-inner").classList.add("used");const n=t.querySelector(".impact-wrapper"),i=document.createElement("p");i.classList.add("impact-score"),s<=0?i.classList.add("text-pink"):i.classList.add("text-blue"),i.textContent=s,n.appendChild(i),t.removeEventListener("click",cardClickHandler),updateRankingDisplay()}function hideQueries(){document.getElementById("queries-wrapper").textContent=""}function updateGameState(e){}function checkForEndGame(){currentSession.position<=1?currentSession.endGame("won"):currentSession.usedCards.length>=6&&currentSession.endGame("lost")}function updateScoreDisplay(){document.getElementById("score-display").textContent="Score: "+currentSession.score}function displayQuery(e){document.getElementById("query").textContent=e}function updateRankingDisplay(){const e=document.getElementById("ranking-display");e.innerHTML="",updateUsedCardsCount();const t=[...queries[currentSession.queryIndex].ranking.results];userSite=t.find((e=>e.userSite)),t.splice(t.indexOf(userSite),1);const s=currentSession.position;t.splice(s-1,0,userSite),t.forEach(((t,s)=>{const n=document.createElement("div");n.className="google-result";const i=document.createElement("div");i.className="title",i.textContent=s+1+". "+t.title;const r=document.createElement("div");r.className="url",r.textContent=t.url;const a=document.createElement("div");if(a.className="description",a.textContent=t.description,n.appendChild(i),n.appendChild(r),n.appendChild(a),t.userSite){n.classList.add("user-position");const e=document.createElement("div");e.classList.add("user-site-scroll-position"),n.appendChild(e)}e.appendChild(n)}));document.getElementById("results-grid-column").classList.add("overflow-y-scroll");const n=document.querySelector(".user-site-scroll-position");setTimeout((()=>{n.scrollIntoView({behavior:"smooth"})}),3)}async function fetchCards(e){const t=sp.from("Card_v2");try{let{data:s,error:n}=await t.select("*").eq("query_id",e);if(n)throw n;return s}catch(e){throw console.error("Error retrieving cards from Supabase:",e),e}}async function collectCards(e){try{return cards=await fetchCards(e),console.log(cards),displayCards(cards),cards}catch(e){console.error("Error collecting cards:",e)}}function displayCards(e){const t=document.getElementById("game-cards-container");t.innerHTML="",e.forEach(((e,s)=>{const n=document.createElement("div");n.classList.add("game-card");const i=document.createElement("div");i.classList.add("game-card-inner");const r=document.createElement("div");r.classList.add("game-card-title-wrapper");const a=document.createElement("div");a.classList.add("game-card-description-wrapper");const o=document.createElement("div");o.classList.add("impact-wrapper"),n.appendChild(i),n.setAttribute("data-index",s);const c=`\n      <p class="game-card-title">${e.name}</h3>\n      `;r.innerHTML=c;const d=`\n      <p class="game-card-description">${e.description}</p>\n      `;a.innerHTML=d,i.innerHTML="",i.appendChild(r),i.appendChild(a),n.appendChild(o),n.addEventListener("click",cardClickHandler),t.appendChild(n)}))}function cardClickHandler(e){if(currentSession.gameOver)return;const t=e.currentTarget;onCardChoice(parseInt(t.getAttribute("data-index"),10),t)}function disableAllCards(){const e=document.getElementsByClassName("game-card");for(let t of e)t.classList.add("used"),t.removeEventListener("click",cardClickHandler)}function submitGameSessionToSupabase(e,t,s){sp.from("Game_v2").insert([{player_name:e,query_id:t,cards:s}]).select().then((e=>{console.log("Game session submitted successfully:",e);e.data[0].id})).catch((e=>{console.error("Error submitting game session to Supabase:",e)}))}